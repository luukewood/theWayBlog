// $map: ( 12:12, 40:6, 62:4, 75:2 );

// @each $key, $val in $map {
// 	@media all and (min-width: $key + em) {

// 		@for $i from 1 through $val {
// 			$equ: 100% / $i;
// 			.col#{$key} {
// 				width: $equ;
// 			}
// 		}

// 	}
// }

$gap: 1em;
$columnSize: 12;
$containerWidth: 1200px;

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

.container {
	max-width: $containerWidth;
	display: block;
	margin: auto;
}

.row {
	overflow: hidden;
}

[class^="col-"] {
	float: left;
}


$breakpoints: ("xs": 480px, "sm": 760px, "m": 992px, "l": 1200px);

@each $slug, $size in $breakpoints {
	@media (min-width: #{$size}) {
		@for $i from 1 through $columnSize {
			.col-#{$slug}-#{$i} {
				width: ($i / $columnSize) * 100%;
			}
		}

		@for $i from 1 through $columnSize {
			.offset-#{$slug}-#{$i} {
				margin-left: ($i / $columnSize) * 100%;
			}
		}
	}
}








// $settings: (
// 	maxWidth: 1200px,
// 	columns: 12,
// 	padding: 12px,
// 	breakpoints: (
// 		cs: "(min-width: 320px)",
// 		xs: "(min-width: 480px)",
// 		sm: "(min-width: 760px)",
// 		m: "(min-width: 992px)",
// 		l: "(min-width: 1200px)"
// 	) 
// );

// @mixin createGrid($settings) {

// 	$breakpoints: map-get($settings, "breakpoints");

// 	@each $key, $breakpoint in $breakpoints {
// 		@mixin media($breakpoint) {
// 			@mixin renderGrid($key, $settings) {
// 				$i : 1;

// 				@while $i <= map-get($settings, "columns") {
// 					.col-#{$key}-#{$i} {
// 						float: left;
// 						width: 100% * $i / map-get($settings, "columns");
// 					}
// 				}
// 				$i : $i +1;
// 			}
// 		}
// 	}

// }